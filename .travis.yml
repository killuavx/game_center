language: python
python:
  - "3.3"
services:
  - redis-server
  - mongodb
env:
  #- DB=mysql
  #  PJ=webservice
  #  DJANGO_SETTINGS_MODULE=webservice.travis_settings
  #  DBA_SQL_DJANGO_ENGINE='django.db.backends.mysql'
  #  DBA_SQL_DB_NAME='webservice_test'
  #  DBA_SQL_ADMIN_USER='travis'
  #  DBA_SQL_ADMIN_PASSWORD=''
  #  DBA_SQL_HOST='127.0.0.1'
  #  DBA_SQL_PORT='3306'
  #- DB=postgresql
  #  PJ=webservice
  #  DJANGO_SETTINGS_MODULE=webservice.travis_settings
  #  DBA_SQL_DJANGO_ENGINE='django.db.backends.postgresql_psycopg2'
  #  DBA_SQL_DB_NAME='webservice_test'
  #  DBA_SQL_ADMIN_USER='postgres'
  #  DBA_SQL_ADMIN_PASSWORD=''
  #  DBA_SQL_HOST='127.0.0.1'
  #  DBA_SQL_PORT=''
  - DB=sqlite
    PJ=webservice
    DJANGO_SETTINGS_MODULE=webservice.travis_settings
    DBA_SQL_DJANGO_ENGINE='django.db.backends.sqlite3'
    DBA_SQL_DB_NAME='webservice_test'
    DBA_SQL_ADMIN_USER=''
    DBA_SQL_ADMIN_PASSWORD=''
    DBA_SQL_HOST=''
    DBA_SQL_PORT=''

install:
  #- cd dependents/searcher && ./all_deploy.sh && cd -
  - pip install -r $PJ/requirements.txt  --use-mirrors --download-cache $TRAVIS_BUILD_DIR/download-cache/
  - pip install -r $PJ/requirements-travis.txt --use-mirrors --download-cache $TRAVIS_BUILD_DIR/download-cache/
  - cd dependents/python-dateutil-2.0 && python setup.py install && cd -
  - cd dependents/easy-thumbnails && python setup.py install && cd -
  - cd dependents/django-tagging && python setup.py install && cd -
  - cd dependents/django-tagging-autocomplete && python setup.py install && cd -
  - cd dependents/django-userena && python setup.py install && cd -
  - cd dependents/django-behave && python setup.py install && cd -
  - cd dependents/splinter && python setup.py install && cd -
  - cd dependents/behaving && python setup.py install && cd -
  #- sh -c "if [ '$DB' = 'postgresql' ]; then pip install psycopg2 --use-mirrors --download-cache $TRAVIS_BUILD_DIR/download-cache/; fi"
  - sh -c "if [ '$DB' = 'mysql' ]; then pip install -e git+https://github.com/clelland/MySQL-for-Python-3.git#egg=MySQLdb --use-mirrors --download-cache $TRAVIS_BUILD_DIR/download-cache/; fi"

before_script:
  #- sh -c "if [ '$DB' = 'postgresql' ]; then psql -c 'CREATE DATABASE webservice_test;' -U postgres; fi"
  - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'CREATE DATABASE webservice_test;'; fi"
  - cd $PJ
  - python manage.py syncdb --noinput
  #- sh -c "if [ '$DB' = 'postgresql' ]; then sleep 10; fi"
  - python manage.py migrate
  - mkdir -p reports
  - cd -

after_script:
  #- sh -c "if [ '$DB' = 'postgresql' ]; then psql -c 'DROP DATABASE webservice_test;' -U postgres; fi"
  - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'DROP DATABASE webservice_test;'; fi"

script:
  - cd $PJ
  - python manage.py test warehouse taxonomy searcher mobapi promotion account fts
  - cd -

after_success:
  - coveralls
